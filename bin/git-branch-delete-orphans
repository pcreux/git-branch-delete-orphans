#!/usr/bin/env ruby

require 'rubygems'
require 'rainbow'

['TERM', 'INT'].each do |signal|
  Signal.trap(signal) do
    # most likely, users will CTRL-C when being prompted
    # for an action, so we need to ensure that the shell
    # prompt is rendered on a new line
    puts
    exit -1
  end
end

def remotes
  puts "Listing remote branches..."
  @remote ||= `git ls-remote | grep 'refs/heads'`.split("\n").map { |l| l.gsub(/^.*refs\/heads\//, '').strip }
end

def locals
  @local ||= `cat .git/config | grep "refs/heads/\\w"`.split("\n").map { |l| l.gsub(/^.*refs\/heads\//, '').strip }
end

def cli(orphans)
  puts ""

  if orphans.empty?
    puts "No orphaned local branches, nothing to do."
    exit
  end

  puts "The following branches track a remote branch which does not exist anymore:"
  orphans.each { |b| puts " - #{b}" }

  delete_all = false
  keep_all = false
  orphans.each do |b| 
    delete = false
    keep = false
    until delete || delete_all || keep || keep_all
      puts ""
      puts "Branch #{b.bright} tracks a remote branch which does not exist anymore."
      print "Do you want to [d]elete it, [D]elete all, [k]eep it or [K]eep all? "
      case STDIN.gets.chomp
      when 'd' then delete = true
      when 'D' then delete_all = true
      when 'k' then keep = true
      when 'K' then keep_all = true
      end
    end
    if (delete_all || delete) && !(keep_all || keep)
      system("git branch -D #{b}") # git outputs success / error messages
    end
  end
end

orphans = locals - remotes
cli(orphans)
